<system>
#  log_level [info|warn|error|fatal|debug|trace]
  log_level warn
#  without_source
</system>

@include config.d/*.conf

<source>
  @type forward
  port 24224
  bind 0.0.0.0
  tag {{ hostname }}
</source>
# syslog受信したい場合
#<source>
#  @type syslog
#  @label @foward_syslog
#  port 5140
#  bind 0.0.0.0
#  tag foward.foward_syslog
#</source>

# secure forwardで送信されたログを受信したい場合
#<source>
#  @type forward
#  @label @forward_log
#  port 24224
#  bind 0.0.0.0
#  <security>
#    self_hostname {{ main_domain_name }}
#    shared_key {{ fluentd_send_server_shared_key }}
#  </security>
#  <transport tls>
#    cert_path /etc/td-agent/certs/fluentd.crt
#    private_key_path /etc/td-agent/certs/fluentd.key
#    private_key_passphrase {{ fluentd_send_server_private_key_passphrase }}
#  </transport>
#  tag shigure
#</source>

# コンテナのログ採取
<source>
  @type tail
  path /var/lib/docker/containers/*/*-json.log
  pos_file /var/tmp/docker.log.pos
  time_key time
  time_format %Y-%m-%dT%H:%M:%S.%NZ
  tag docker.{{ hostname }}
  format json
</source>

# サーバーのログ収集系
<source>
    @type tail
    path /var/log/syslog
    pos_file /var/tmp/syslog.pos
    format syslog
    keep_time_key true
    tag syslog.{{ hostname }}
</source>
<source>
    @type tail
    path /var/log/mail.log
    pos_file /var/tmp/maillog.pos
    format syslog
    keep_time_key true
    tag mail.{{ hostname }}
</source>

#### Filter
### Add MyHostname
<filter **.*>
  @type record_transformer
  <record>
    hostname ${hostname}
    tag ${tag}
  </record>
</filter>

# ホストのシステムログは直slackへの通知と集積サーバーへ転送する
<match **.*>
    @type copy
{% if stage == "prd" %}
    # stackDriverへの送信設定
    <store>
      @type google_cloud
      # https://cloud.google.com/logging/docs/agent/configuration#cloud-fluentd-config
      max_retry_wait 1h # default: inifinity
      disable_retry_limit true # DO NOT discard buffer anyway
      # 送信間隔
      flush_interval 1s
      try_flush_interval 1 # default: 1
      queued_chunk_flush_interval 1 # default: 1
      num_threads 2 # 64Mbps (2 * 4m / 1 sec) at maximum
      # google_cloudに必須の情報を付与する
      vm_id {{ hostname }}
      zone {{ hostname }}
      use_metadata_service false
      label_map {
         "env": "env"
       }
       <buffer>
         @type file
         path /var/log/td-agent/google-cloud-send
         # trueの場合、プラグインはretry_timeoutおよびretry_max_timesオプションを無視し、永久にフラッシュを再試行します
         retry_forever true
         # 送信間隔
         flush_interval 1s
       </buffer>
    </store>
{% else %}
    <store>
      @type file
      path /var/log/td-agent/log_file_out
      <buffer>
        timekey_wait 10m
        timekey 1d
      </buffer>
    </store>
{% endif %}
    <store>
        type relabel
        @label @rewrite
    </store>
</match>
<label @rewrite>
    # システムのログで該当メッセージがあった場合に発報
    <filter syslog.**>
        @type ngrep
        <exclude>
            key log
            pattern (IPv6: ADDRCONF|br-|ansible-file: Invoked|device veth|ansible-stat: Invoked|: XFS .dm-|: renamed from|docker[0-9]+: port [1-9]*\(veth[a-zA-Z0-9]*\))
        </exclude>
        <regexp>
            key log
            pattern (kernel|panic|halt|UFW LIMIT BLOCK)
        </regexp>
    </filter>
    <match syslog.**>
        @type slack
        webhook_url "{{ slack_web_hook_url }}"
        channel "#{{ slack_channel }}"
        icon_emoji "{{ slack_icon }}"
        username "{{ hostname }}_SystemLogGrep"
        message %s %s %s
        message_keys tag,message,log
        flush_interval 180s
    </match>
</label>
